name: Build Weni Integrations WebApp in Shared (Dispatch)

on:
  workflow_dispatch:
    inputs:

      source-branch:
        description: 'Source branch (master, staging, develop, etc.)'
        required: true
        default: 'main'

      tag-name:
        description: 'Tag id (v0.0.1-develop, v0.0.1-staging, v0.0.2, etc.)'
        required: true

      destination-env:
        type: choice
        description: 'Destination environment (production, develop)'
        required: true
        default: 'develop'
        options:
          - develop
          - staging
          - production

      api-base-url:
        type: choice
        description: 'Base URL of the backend API'
        required: true
        default: 'https://integrations-engine.dev.cloud.weni.ai'
        options:
          - https://integrations-engine.dev.cloud.weni.ai
          - https://integrations-engine-stg.dev.cloud.weni.ai
          - https://integrations-engine.weni.ai

      sentry-dsn:
        description: 'Sentry DSN'
        required: true
        default: 'https://bf0213db44f44d97b286f2c0d7793f4f@sentry.dev.cloud.weni.ai/20'
      
      sentry-environment:
        description: 'Sentry environment (production, staging, develop)'
        required: true
        default: 'develop'
      
      helphero-id:
        description: 'Helphero_id'
        required: true
        default: 'm7dO0to4OK'

jobs:
  docker:
    runs-on: ubuntu-latest 
    steps:
        
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          repository: weni-ai/weni-integrations-webapp
          ref: ${{github.event.inputs.source-branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: 869898323958.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID_SHARED }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY_SHARED }}

      - name: Build and push - Integrations WebApp Image
        id: docker_build1
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: 869898323958.dkr.ecr.us-east-1.amazonaws.com/push-backend:integrations-webapp-${{github.event.inputs.tag-name}}
          no-cache: true
        
      - name: Check out Kubernetes Manifests
        uses: actions/checkout@master
        with:
          ref: main
          repository: Ilhasoft/kubernetes-manifests-platform
          token: ${{ secrets.CICEROW_GITHUB_PERMANENT_TOKEN }}
          path: ./kubernetes-manifests-platform/

      - name: Update image deployment 01
        run: |
            sudo apt update
            sudo apt install -y jq
            echo 'Old image to replace:'
            cat ./kubernetes-manifests-platform/integrations-webapp/${{github.event.inputs.destination-env}}/deployment-webapp.json|jq '.[0].value'
            echo 'New configurations:'
            new_configuration=$(cat ./kubernetes-manifests-platform/integrations-webapp/${{github.event.inputs.destination-env}}/deployment-webapp.json|jq '.[0].value = "869898323958.dkr.ecr.us-east-1.amazonaws.com/push-backend:integrations-webapp-${{github.event.inputs.tag-name}}"')
            echo "$new_configuration"
            echo "$new_configuration" > ./kubernetes-manifests-platform/integrations-webapp/${{github.event.inputs.destination-env}}/deployment-webapp.json

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.CICEROW_GITHUB_PERMANENT_TOKEN }}
          repository: Ilhasoft/kubernetes-manifests-platform
          directory: ./kubernetes-manifests-platform/
          branch: main
          message: "From Integrations WebApp Build (Dispatch)"
